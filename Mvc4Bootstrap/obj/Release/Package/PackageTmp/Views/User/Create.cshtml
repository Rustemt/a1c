@model A1fxCrm.Web.Models.User

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>User</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreateDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreateDate)
            @Html.ValidationMessageFor(model => model.CreateDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ConfirmationToken)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ConfirmationToken)
            @Html.ValidationMessageFor(model => model.ConfirmationToken)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsConfirmed)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsConfirmed)
            @Html.ValidationMessageFor(model => model.IsConfirmed)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastPasswordFailureDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastPasswordFailureDate)
            @Html.ValidationMessageFor(model => model.LastPasswordFailureDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PasswordFailuresSinceLastSuccess)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PasswordFailuresSinceLastSuccess)
            @Html.ValidationMessageFor(model => model.PasswordFailuresSinceLastSuccess)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PasswordChangedDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PasswordChangedDate)
            @Html.ValidationMessageFor(model => model.PasswordChangedDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PasswordSalt)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PasswordSalt)
            @Html.ValidationMessageFor(model => model.PasswordSalt)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PasswordVerificationToken)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PasswordVerificationToken)
            @Html.ValidationMessageFor(model => model.PasswordVerificationToken)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PasswordVerificationTokenExpirationDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PasswordVerificationTokenExpirationDate)
            @Html.ValidationMessageFor(model => model.PasswordVerificationTokenExpirationDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsAdministrator)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsAdministrator)
            @Html.ValidationMessageFor(model => model.IsAdministrator)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicationName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ApplicationName)
            @Html.ValidationMessageFor(model => model.ApplicationName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Comment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comment)
            @Html.ValidationMessageFor(model => model.Comment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PasswordQuestion)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PasswordQuestion)
            @Html.ValidationMessageFor(model => model.PasswordQuestion)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PasswordAnswer)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PasswordAnswer)
            @Html.ValidationMessageFor(model => model.PasswordAnswer)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsApproved)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsApproved)
            @Html.ValidationMessageFor(model => model.IsApproved)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastActivityDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastActivityDate)
            @Html.ValidationMessageFor(model => model.LastActivityDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastLoginDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastLoginDate)
            @Html.ValidationMessageFor(model => model.LastLoginDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastPasswordChangedDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastPasswordChangedDate)
            @Html.ValidationMessageFor(model => model.LastPasswordChangedDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreationDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreationDate)
            @Html.ValidationMessageFor(model => model.CreationDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsOnLine)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsOnLine)
            @Html.ValidationMessageFor(model => model.IsOnLine)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsLockedOut)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsLockedOut)
            @Html.ValidationMessageFor(model => model.IsLockedOut)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastLockoutDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastLockoutDate)
            @Html.ValidationMessageFor(model => model.LastLockoutDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FailedPasswordAttemptCount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FailedPasswordAttemptCount)
            @Html.ValidationMessageFor(model => model.FailedPasswordAttemptCount)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FailedPasswordAttemptWindowStart)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FailedPasswordAttemptWindowStart)
            @Html.ValidationMessageFor(model => model.FailedPasswordAttemptWindowStart)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FailedPasswordAnswerAttemptCount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FailedPasswordAnswerAttemptCount)
            @Html.ValidationMessageFor(model => model.FailedPasswordAnswerAttemptCount)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FailedPasswordAnswerAttemptWindowStart)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FailedPasswordAnswerAttemptWindowStart)
            @Html.ValidationMessageFor(model => model.FailedPasswordAnswerAttemptWindowStart)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsSubscriber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsSubscriber)
            @Html.ValidationMessageFor(model => model.IsSubscriber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreatedDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreatedDate)
            @Html.ValidationMessageFor(model => model.CreatedDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsAnonymous)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsAnonymous)
            @Html.ValidationMessageFor(model => model.IsAnonymous)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PasswordFormat)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PasswordFormat)
            @Html.ValidationMessageFor(model => model.PasswordFormat)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TimeZone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TimeZone)
            @Html.ValidationMessageFor(model => model.TimeZone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FullName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FullName)
            @Html.ValidationMessageFor(model => model.FullName)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
}
